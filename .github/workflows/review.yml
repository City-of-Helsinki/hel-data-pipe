name: Build & Staging
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        service: [ 'endpoint', 'parser', 'persister']

    runs-on: ubuntu-latest
    name: Build ${{ matrix.service }}

    steps:
      - uses: actions/checkout@v2

      - name: Build ${{ matrix.service }}
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.service }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.service }}
          DOCKER_IMAGE_NAME: ${{ matrix.service }}

  review:
    needs: [build]

    strategy:
      fail-fast: false
      matrix:
        service: [ 'endpoint', 'parser', 'api', 'persister']
        include:
          - service: 'parser'
            dir: 'parser'
            K8S_LIVENESS_FILE: /app/ready.txt
            K8S_READINESS_FILE: /app/ready.txt
            ENABLE_KAFKA: true
          - service: 'endpoint'
            dir: 'endpoint'
            SERVICE_PORT: "5000"
            ENABLE_KAFKA: true
          - service: 'api'
            dir: persister
            SERVICE_PORT: "8080"
            ENABLE_DB: true
          - service: 'persister'
            dir: persister
            ENABLE_DB: true
            ENABLE_KAFKA: true
            K8S_LIVENESS_FILE: /app/ready.txt
            K8S_READINESS_FILE: /app/ready.txt
            CONSUMER: 1

    runs-on: ubuntu-latest
    name: Review ${{ matrix.service }}

    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Review Services
        if: matrix.ENABLE_DB
        uses: andersinno/kolga-deploy-service-action@v2
        with:
          projects: ${{ matrix.dir }}
        env:
          POSTGRES_IMAGE: "docker.io/andersinnovations/postgis:11-bitnami"

      - name: Kafka variables
        run: |
          echo "K8S_SECRET_KAFKA_BOOTSTRAP_SERVERS=${{ secrets.K8S_SECRET_KAFKA_HOST_STAGING }}:${{ secrets.K8S_SECRET_KAFKA_PORT_STAGING }}" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_HOST=${{ secrets.K8S_SECRET_KAFKA_HOST_STAGING }}" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_PORT=${{ secrets.K8S_SECRET_KAFKA_PORT_STAGING }}" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_SECURITY_PROTOCOL=SSL" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_SASL_MECHANISM=${{ secrets.KAFKA_SASL_MECHANISM }}" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_RAW_DATA_TOPIC_NAME=${{ secrets.TEST_KAFKA_RAW_DATA_TOPIC_NAME }}" >> $GITHUB_ENV
          echo "K8S_SECRET_KAFKA_PARSED_DATA_TOPIC_NAME=${{ secrets.TEST_KAFKA_PARSED_DATA_TOPIC_NAME }}" >> $GITHUB_ENV
          echo "K8S_FILE_SECRET_KAFKA_CA_STAGING<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.K8S_SECRET_KAFKA_CA_STAGING }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "K8S_FILE_SECRET_KAFKA_ACCESS_CERT_STAGING<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.K8S_SECRET_KAFKA_ACCESS_CERT_STAGING }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "K8S_FILE_SECRET_KAFKA_ACCESS_KEY_STAGING<<EOF" >> $GITHUB_ENV
          echo "${{ secrets.K8S_SECRET_KAFKA_ACCESS_KEY_STAGING }}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        if: matrix.ENABLE_KAFKA

      - name: Disable Kafka check
        if: matrix.ENABLE_KAFKA != true
        run: |
          echo "K8S_SECRET_SKIP_KAFKA_CHECK=1" >> $GITHUB_ENV

      - name: Service with ingress
        if: matrix.SERVICE_PORT != ''
        run: |
          echo "ENVIRONMENT_URL=https://${{ env.K8S_NAMESPACE }}-${{ matrix.service }}.${{ env.BASE_DOMAIN }}" >> $GITHUB_ENV

      - name: File probes
        if: matrix.SERVICE_PORT == ''
        run: |
          echo "K8S_LIVENESS_FILE=/app/ready.txt" >> $GITHUB_ENV
          echo "K8S_READINESS_FILE=/app/ready.txt" >> $GITHUB_ENV
          echo "K8S_INGRESS_DISABLED=True" >> $GITHUB_ENV

      - name: Consumer settings
        if: matrix.CONSUMER == 1
        run: |
          echo "K8S_SECRET_CONSUMER=1" >> $GITHUB_ENV

      - name: Deploy ${{ matrix.dir }}
        uses: andersinno/kolga-deploy-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./${{ matrix.dir }}/Dockerfile
          DOCKER_BUILD_CONTEXT: ./${{ matrix.dir }}
          DOCKER_IMAGE_NAME: ${{ matrix.dir }}
          PROJECT_NAME: ${{ matrix.dir }}
          K8S_SECRET_ALLOWED_HOSTS: "*"
