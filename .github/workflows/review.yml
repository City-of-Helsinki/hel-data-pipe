name: Build & Staging
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  DATABASE_USER: user
  DATABASE_PASSWORD: testing-password
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}

jobs:
  build-endpoint:
    runs-on: ubuntu-latest
    name: Build Endpoint
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./endpoint/Dockerfile
          DOCKER_BUILD_CONTEXT: ./endpoint
          DOCKER_IMAGE_NAME: endpoint

  build-parser:
    runs-on: ubuntu-latest
    name: Build Parser
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./parser/Dockerfile
          DOCKER_BUILD_CONTEXT: ./parser
          DOCKER_IMAGE_NAME: parser

  build-persister:
    runs-on: ubuntu-latest
    name: Build Persister
    steps:
      - uses: actions/checkout@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_BUILD_SOURCE: ./persister/Dockerfile
          DOCKER_BUILD_CONTEXT: ./persister
          DOCKER_IMAGE_NAME: persister

  review-endpoint:
    runs-on: ubuntu-latest
    needs: [build-endpoint,build-parser,build-persister]
    name: Review Endpoint
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy Endpoint
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}-ep.${{ env.BASE_DOMAIN }}
          DOCKER_BUILD_SOURCE: ./endpoint/Dockerfile
          DOCKER_BUILD_CONTEXT: ./endpoint
          DOCKER_IMAGE_NAME: endpoint
          PROJECT_NAME: endpoint
          SERVICE_PORT: "5000" 

  review-parser:
    runs-on: ubuntu-latest
    needs: [build-endpoint,build-parser,build-persister]
    name: Review Parser
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy Parser
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}-pa.${{ env.BASE_DOMAIN }}
          DOCKER_IMAGE_NAME: parser
          DOCKER_BUILD_SOURCE: ./parser/Dockerfile
          PROJECT_NAME: parser
          DOCKER_BUILD_CONTEXT: ./parser
          K8S_SECRET_SKIP_KAFKA_CHECK: 1
          K8S_SECRET_KAFKA_BOOTSTRAP_SERVERS: ${{ secrets.TEST_KAFKA_BOOTSTRAP_SERVERS }}
          K8S_SECRET_KAFKA_SECURITY_PROTOCOL: ${{ secrets.KAFKA_SECURITY_PROTOCOL }}
          K8S_SECRET_KAFKA_SASL_MECHANISM: ${{ secrets.KAFKA_SASL_MECHANISM }}
          K8S_SECRET_KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          K8S_SECRET_KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          K8S_SECRET_KAFKA_RAW_DATA_TOPIC_NAME: ${{ secrets.TEST_KAFKA_RAW_DATA_TOPIC_NAME }}
          K8S_SECRET_KAFKA_PARSED_DATA_TOPIC_NAME: ${{ secrets.TEST_KAFKA_PARSED_DATA_TOPIC_NAME }}
          K8S_LIVENESS_FILE: /app/ready.txt
          K8S_READINESS_FILE: /app/ready.txt

  review-persister:
    runs-on: ubuntu-latest
    needs: [build-endpoint,build-parser,build-persister]
    name: Review Persister
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Review-Services
        uses: andersinno/kolga-deploy-service-action@v2
        with:
          projects: persister
        env:
          POSTGRES_IMAGE: "docker.io/andersinnovations/postgis:11-bitnami"

      - name: Deploy Persister
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}-pe.${{ env.BASE_DOMAIN }}
          DOCKER_IMAGE_NAME: persister
          DOCKER_BUILD_SOURCE: ./persister/Dockerfile
          DOCKER_BUILD_CONTEXT: ./persister
          PROJECT_NAME: persister
          SERVICE_PORT: "8080"
          K8S_SECRET_SKIP_KAFKA_CHECK: 1
          K8S_SECRET_ALLOWED_HOSTS: "*"
