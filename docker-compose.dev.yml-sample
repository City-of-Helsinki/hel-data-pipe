version: "3.8"
services:
  endpoint:
    depends_on:
      - zookeeper
      - kafka
  parser:
    depends_on:
      - zookeeper
      - kafka
  persister:
    depends_on:
      - zookeeper
      - kafka
      - db
  api:
    depends_on:
      - db
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    hostname: kafka
    image: wurstmeister/kafka
    ports:
      - "9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "${KAFKA_RAW_DATA_TOPIC_NAME}:1:1,${KAFKA_PARSED_DATA_TOPIC_NAME}:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: binakot/postgresql-postgis-timescaledb
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    ports:
      - "5432"
    volumes:
      - db-data:/pgdata
volumes:
  db-data:
