version: "3.8"

x-base: &base
  env_file:
    - ./.env.dev

services:
  endpoint:
    <<: *base
    build:
      context: ./endpoint
      target: development
    ports:
      - "5000:5000"
    restart: always
    volumes:
      - ./endpoint:/app
  parser:
    <<: *base
    build:
      context: ./parser
      target: development
    restart: always
    volumes:
      - ./parser:/app
  api:
    build:
      context: ./persister
      target: development
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./persister:/app
  persister:
    <<: *base
    build:
      context: ./persister
    command: python manage.py consume_parsed_data
    restart: always
    volumes:
      - ./persister/:/app/

  # uncomment to run PostgreSQL, Kafka & Zookeeper via docker-compose

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  # kafka:
  #   <<: *base
  #   hostname: kafka
  #   image: wurstmeister/kafka
  #   ports:
  #     - "9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "${KAFKA_RAW_DATA_TOPIC_NAME}:1:1,${KAFKA_PARSED_DATA_TOPIC_NAME}:1:1"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  # db:
  #   <<: *base
  #   image: binakot/postgresql-postgis-timescaledb
  #   ports:
  #     - "5432"
  #   volumes:
  #     - db-data:/pgdata
# volumes:
#   db-data:
